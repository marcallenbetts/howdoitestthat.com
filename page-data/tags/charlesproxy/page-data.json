{"componentChunkName":"component---src-templates-tag-js","path":"/tags/charlesproxy/","result":{"data":{"site":{"siteMetadata":{"title":"How Do I Test That?","author":"Marc Betts","labels":[{"tag":"web","tech":"Web","name":"FaChrome","size":20,"color":"white"},{"tag":"react","tech":"React","name":"DiReact","size":20,"color":"deepskyblue"},{"tag":"git","tech":"Git","name":"DiGitMerge","size":20,"color":"white"},{"tag":"javascript","tech":"JavaScript","name":"DiJsBadge","size":20,"color":"yellow"},{"tag":"css","tech":"CSS","name":"DiCss3Full","size":20,"color":"teal"},{"tag":"python","tech":"Python","name":"DiPython","size":20,"color":"deepskyblue"},{"tag":"nodejs","tech":"Node.js","name":"DiNodejsSmall","size":20,"color":"lightgreen"},{"tag":"ruby","tech":"Ruby","name":"DiRuby","size":20,"color":"crimson"},{"tag":"java","tech":"Java","name":"FaJava","size":20,"color":"wheat"},{"tag":"angular","tech":"Angular","name":"DiAngularSimple","size":20,"color":"red"},{"tag":"html","tech":"HTML","name":"FaHtml5","size":20,"color":"darkorange"},{"tag":"php","tech":"php","name":"DiPhp","size":20,"color":"violet"},{"tag":"mongodb","tech":"MongoDB","name":"DiMongodb","size":20,"color":"green"},{"tag":"mongoose","tech":"Mongoose","name":"DiMongodb","size":20,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"DiVisualstudio","size":20,"color":"deepskyblue"},{"tag":"android","tech":"Android","name":"DiAndroid","size":20,"color":"green"},{"tag":"ios","tech":"iOS","name":"FaApple","size":20,"color":"white"},{"tag":"cli","tech":"cli","name":"DiTerminal","size":20,"color":"white"},{"tag":"curl","tech":"curl","name":"DiTerminal","size":20,"color":"white"},{"tag":"mobile","tech":"Mobile","name":"FaMobileAlt","size":20,"color":"white"},{"tag":"proxy","tech":"proxy","name":"FaServer","size":20,"color":"white"},{"tag":"charlesproxy","tech":"CharlesProxy","name":"FaTools","size":20,"color":"white"},{"tag":"mitmproxy","tech":"mitmproxy","name":"FaTools","size":20,"color":"white"},{"tag":"postman","tech":"Postman","name":"DiTerminal","size":20,"color":"white"},{"tag":"newman","tech":"Newman","name":"FaTools","size":20,"color":"white"},{"tag":"express","tech":"Express","name":"FaJsSquare","size":20,"color":"white"},{"tag":"webserver","tech":"webserver","name":"FaServer","size":20,"color":"white"},{"tag":"nginx","tech":"NGINX","name":"FaServer","size":20,"color":"white"},{"tag":"apitesting","tech":"APITesting","name":"FaServer","size":20,"color":"white"},{"tag":"serveo","tech":"Serveo","name":"FaTools","size":20,"color":"white"},{"tag":"ngrok","tech":"ngrok","name":"FaTools","size":20,"color":"white"},{"tag":"localtunnel","tech":"Localtunnel","name":"FaTools","size":20,"color":"white"},{"tag":"network","tech":"Network","name":"FaEthernet","size":20,"color":"white"},{"tag":"lodash","tech":"Lodash","name":"FaJsSquare","size":20,"color":"white"},{"tag":"moment","tech":"Moment","name":"FaJsSquare","size":20,"color":"white"}]}},"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"excerpt":"I use Charles Proxy pretty much nonstop when \ntesting. As a backup I use mitmproxy. It lacks a bit\nof the polished UI that Charles provides, but it is free and open source. And it\ngets cool points for…","html":"<p>I use <a href=\"https://www.charlesproxy.com/\">Charles Proxy</a> pretty much nonstop when\ntesting. As a backup I use <a href=\"https://mitmproxy.org/\">mitmproxy</a>. It lacks a bit\nof the polished UI that Charles provides, but it is free and open source. And it\ngets cool points for being a command line tool.</p>\n<p>These notes cover only a fraction of what mitmproxy can do, but is pretty much\neverything I need most days.</p>\n<h3>Install</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install mitmproxy</code></pre></div>\n<h3>Help</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mitmproxy --help</code></pre></div>\n<h3>Start proxy on port 8989</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mitmproxy --listen-port 8989 --ssl-insecure \n--set console_mouse=false</code></pre></div>\n<p>The <code class=\"language-text\">ssl-insecure</code> flag ignores insecure SSL sites, which is common in\na lot of the test environments I use. The <code class=\"language-text\">console_mouse</code> option makes it\neasier to copy/paste output from the terminal.</p>\n<h3>Start reverse proxy on port 8989 that directs traffic to port 4001</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mitmproxy —-listen-port 8989 —-ssl-insecure\n-—set console_mouse=false \n-—mode reverse:http://localhost:4001</code></pre></div>\n<h3>Navigation</h3>\n<ul>\n<li><code class=\"language-text\">j</code>/<code class=\"language-text\">k</code>: down/up</li>\n<li><code class=\"language-text\">enter</code>: select request</li>\n<li><code class=\"language-text\">q</code>: back/quit</li>\n<li><code class=\"language-text\">z</code>: clear requests</li>\n</ul>","id":"7a1ebc26-954d-56c1-8316-f79729162e2a","frontmatter":{"title":"mitmproxy cheat sheet","date":"July, 2019","tags":["mitmproxy","proxy","cli","charlesproxy"]},"fields":{"slug":"/mitm-proxy-cheat-sheet/"}}},{"node":{"excerpt":"Anybody who has worked with me for more than five minutes know that I have two \nbasic categories of test tools that I gravitate toward: proxies and command line\ntools. Proxies are great because they…","html":"<p>Anybody who has worked with me for more than five minutes know that I have two\nbasic categories of test tools that I gravitate toward: proxies and command line\ntools.</p>\n<p>Proxies are great because they give you valuable insight in to the network requests\nyour application is making that aren't usually visible from within the app. Command line\ntools are great for lots of reasons, mainly because junior developers and less tech savvy\npeople on the team will think you are some sort of super hacker wizard if they walk by and see\nyou frantically typing in a terminal window.</p>\n<p>But it's not alwasy obvious how to get your terminal to send network traffic to a proxy.</p>\n<p>These days I use <a href=\"https://www.getpostman.com/\">Postman</a> as my API test tool of choice. It's\na solid tool for testing and includes a commmand line runner (Newman). When using the GUI,\nit's really easy to see the requests and responses. When running Newman from the command line, not\nso much.</p>\n<p>So how do you configure CLIs to use a local proxy? Turns out you just need to set the <code class=\"language-text\">http_proxy</code>\nenvironment variable. And when you're done you can <code class=\"language-text\">unset</code> it. (Examples below use the default port for <a href=\"https://www.charlesproxy.com/\">Charles Proxy</a>).</p>\n<h3>TL;DR</h3>\n<ul>\n<li><code class=\"language-text\">export http_proxy=http://localhost:8888</code></li>\n<li><code class=\"language-text\">export https_proxy=http://localhost:8888</code></li>\n<li><code class=\"language-text\">unset http_proxy</code></li>\n<li><code class=\"language-text\">unset https_proxy</code></li>\n</ul>","id":"0a746cb0-582d-53ae-af9d-c03afa3a974f","frontmatter":{"title":"Proxy command line processes","date":"January, 2019","tags":["proxy","charlesproxy","postman","newman","cli"]},"fields":{"slug":"/proxy-command-line-processes/"}}},{"node":{"excerpt":"The first question I ask when trying to figure out how to test something is \"what are the moving parts?\" I'm\nalways trying to see what is changing the helps understand what the application is doing. I…","html":"<p>The first question I ask when trying to figure out how to test something is \"what are the moving parts?\" I'm\nalways trying to see what is changing the helps understand what the application is doing. I'm looking for\nthings like database records that are touched or log file output. And in a lot of applications, it's\nnetwork requests.</p>\n<p>For network requests, knowing how to use a proxy is an invaluable tool. My current proxy of choice is\n<a href=\"https://www.charlesproxy.com/\">Charles Proxy</a>, but will turn to <a href=\"https://mitmproxy.org/\">mitmproxy</a> in a pinch.</p>\n<p>One of the apps I'm currently testing includes <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request\">preflight requests</a>\nfor all API requests. I was trying to use Charles to rewrite some of the requests for some of the tests, but\ncouldn't find any way within Charles to distinguish between OPTIONS requests and POST requests. This was causing\nthe OPTIONS requests to get rewritten in a way that the app didn't care for.</p>\n<p>The solution I came up with was to use (NGINX)[https://www.nginx.com/] as a proxy to filter the requests before\nthey get to Charles. This allows me to route the OPTIONS request directly to the server to deal with and the POST\nrequests are sent to the proxy where they can manipulated for testing.</p>\n<p>The nginx.conf for this setup looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">server {\n\tlisten 8085;\n\terror_page 405 =200 $uri;\n\tlocation / {\n\t\tif ($request_method = OPTIONS) {\n\t\t\tproxy_pass REMOTE_HOST;\n\t\t}\n\t\tif ($request_method != OPTIONS) {\n\t\t\tproxy_pass LOCAL_HOST:8084;\n\t\t}\n\t}\n}</code></pre></div>\n<p>This will run NGINX on port 8085 and redirect all non-OPTIONS requests to a proxy\nserver running on port 8084. The proxy server needs to be configured as a reverse\nproxy on port 8084.</p>\n<h3>TL;DR</h3>\n<ol>\n<li>Configure a reverse proxy to listen on port 8084</li>\n<li>Configure app to use proxy on port 8085</li>\n<li><code class=\"language-text\">git clone git@github.com:marcallenbetts/nginx-proxy-and-errors.git</code></li>\n<li><code class=\"language-text\">docker-compose up --build</code></li>\n</ol>","id":"032a6067-1191-578a-9e11-ff7f51691648","frontmatter":{"title":"Using NGINX as a filtering proxy","date":"December, 2018","tags":["nginx","proxy","charlesproxy","mitmproxy","webserver"]},"fields":{"slug":"/nginx-proxy-filter/"}}}]}},"pageContext":{"tag":"charlesproxy"}},"staticQueryHashes":["392256161","551055924","63159454"]}