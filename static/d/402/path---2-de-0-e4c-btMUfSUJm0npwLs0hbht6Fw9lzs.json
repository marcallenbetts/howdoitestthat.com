{"data":{"site":{"siteMetadata":{"title":"How Do I Test That?","author":"Marc Betts","labels":[{"tag":"react","tech":"React","name":"DiReact","size":20,"color":"deepskyblue"},{"tag":"git","tech":"Git","name":"DiGitMerge","size":20,"color":"white"},{"tag":"javascript","tech":"JavaScript","name":"DiJsBadge","size":20,"color":"yellow"},{"tag":"css","tech":"CSS","name":"DiCss3Full","size":20,"color":"teal"},{"tag":"python","tech":"Python","name":"DiPython","size":20,"color":"deepskyblue"},{"tag":"nodejs","tech":"Node.js","name":"DiNodejsSmall","size":20,"color":"lightgreen"},{"tag":"ruby","tech":"Ruby","name":"DiRuby","size":20,"color":"crimson"},{"tag":"java","tech":"Java","name":"FaJava","size":20,"color":"wheat"},{"tag":"angular","tech":"Angular","name":"DiAngularSimple","size":20,"color":"red"},{"tag":"html","tech":"HTML","name":"FaHtml5","size":20,"color":"darkorange"},{"tag":"php","tech":"php","name":"DiPhp","size":20,"color":"violet"},{"tag":"mongodb","tech":"MongoDB","name":"DiMongodb","size":20,"color":"green"},{"tag":"mongoose","tech":"Mongoose","name":"DiMongodb","size":20,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"DiVisualstudio","size":20,"color":"deepskyblue"},{"tag":"android","tech":"Android","name":"DiAndroid","size":20,"color":"green"},{"tag":"cli","tech":"cli","name":"DiTerminal","size":20,"color":"white"},{"tag":"curl","tech":"curl","name":"DiTerminal","size":20,"color":"white"},{"tag":"mobile","tech":"Mobile","name":"FaMobileAlt","size":20,"color":"white"},{"tag":"proxy","tech":"proxy","name":"FaServer","size":20,"color":"white"},{"tag":"charlesproxy","tech":"Charles Proxy","name":"FaTools","size":20,"color":"white"},{"tag":"mitmproxy","tech":"mitmproxy","name":"FaTools","size":20,"color":"white"},{"tag":"postman","tech":"Postman","name":"DiTerminal","size":20,"color":"white"},{"tag":"newman","tech":"Newman","name":"FaTools","size":20,"color":"white"},{"tag":"express","tech":"Express","name":"FaJsSquare","size":20,"color":"white"},{"tag":"webserver","tech":"webserver","name":"FaServer","size":20,"color":"white"},{"tag":"nginx","tech":"NGINX","name":"FaServer","size":20,"color":"white"},{"tag":"apitesting","tech":"API Testing","name":"FaServer","size":20,"color":"white"},{"tag":"serveo","tech":"Serveo","name":"FaTools","size":20,"color":"white"},{"tag":"ngrok","tech":"ngrok","name":"FaTools","size":20,"color":"white"},{"tag":"localtunnel","tech":"Localtunnel","name":"FaTools","size":20,"color":"white"},{"tag":"network","tech":"Network","name":"FaEthernet","size":20,"color":"white"},{"tag":"lodash","tech":"Lodash","name":"FaJsSquare","size":20,"color":"white"},{"tag":"moment","tech":"Moment","name":"FaJsSquare","size":20,"color":"white"}]}},"allMarkdownRemark":{"totalCount":11,"edges":[{"node":{"excerpt":"I've been using ngrok for a while and have become a big fan of it. But one of the clients I work\nwith is a large company with a large IT department and I assume a large committee that sits around\na…","html":"<p>I've been using <a href=\"/ngrok/\">ngrok</a> for a while and have become a big fan of it. But one of the clients I work\nwith is a large company with a large IT department and I assume a large committee that sits around\na large table discussing what apps they should block and dreaming up new firewall rules.</p>\n<p>So ngrok doesn't always work where I need it to. So I've had to rely on a few alternates, namely <a href=\"http://serveo.net/\">serveo</a>\nand <a href=\"https://github.com/localtunnel/localtunnel\">localtunnel</a>.</p>\n<h3>localtunnel</h3>\n<p><code class=\"language-text\">npm install -g localtunnel</code></p>\n<p><code class=\"language-text\">lt --port 3000</code></p>\n<h3>serveo</h3>\n<p><code class=\"language-text\">ssh -o ServerAliveInterval=60 -R 80:localhost:3000 serveo.net</code></p>\n<h3>TL;DR</h3>\n<ul>\n<li>localtunnel will work in a pinch, but I noticed some slowness when using it</li>\n<li>serveo doesn't require any installation and tries to re-use the same URL when it reconnects</li>\n</ul>\n<h3>Update</h3>\n<p><a href=\"http://localhost.run/\">localhost.run</a> is also an option.</p>\n<p><code class=\"language-text\">ssh -R 80:localhost:8080 ssh.localhost.run</code></p>","id":"aa020d08-37a0-561a-85be-794f474f898f","frontmatter":{"title":"More tunnels","date":"March 01, 2019","tags":["serveo","localtunnel","ngrok","network"]},"fields":{"slug":"/more-tunnels/"}}},{"node":{"excerpt":"I haven't had to do much mobile app testing recently, but last week I got dragged back in\nto it for an afternoon. I was very quickly reminded how much I hate testing mobile apps.The task I needed to…","html":"<p>I haven't had to do much mobile app testing recently, but last week I got dragged back in\nto it for an afternoon. I was very quickly reminded how much I hate testing mobile apps.</p>\n<p>The task I needed to accomplish was fairly straightforward: log in with a dozen or so\ntest accounts and verify that the accounts had been created correctly. This was going\nto be a one off activity so trying to automate it would have little ROI.</p>\n<p>But just having to type a dozen usernames and passwords on a phone keyboard is enough\nto try my patience, so I fall back to using <a href=\"https://developer.android.com/studio/command-line/adb\">Android Debug Bridge</a>.</p>\n<p>The problem is that I don't use adb often enough to remember how to use it. So I decided\nto write a simplified wrapper for it to make it simple to use the small subset of commands\nthat I actually need, specifically sending text and taking screenshots.</p>\n<p>If situations change and I get sucked back in to the mobile testing world, I may spend\nsome more time making this more usefull.</p>\n<h3>TL;DR</h3>\n<ul>\n<li><code class=\"language-text\">git clone git@github.com:marcallenbetts/android-test-util.git</code></li>\n<li><code class=\"language-text\">npm install</code></li>\n<li><code class=\"language-text\">node atu.js</code></li>\n<li><code class=\"language-text\">help</code></li>\n</ul>","id":"84118bbc-b211-55a5-8f26-adc513eb5b70","frontmatter":{"title":"Android test utils","date":"February 10, 2019","tags":["android","cli","mobile"]},"fields":{"slug":"/android-test-utils/"}}},{"node":{"excerpt":"Anybody who has worked with me for more than five minutes know that I have two \nbasic categories of test tools that I gravitate toward: proxies and command line\ntools.Proxies are great because they…","html":"<p>Anybody who has worked with me for more than five minutes know that I have two\nbasic categories of test tools that I gravitate toward: proxies and command line\ntools.</p>\n<p>Proxies are great because they give you valuable insight in to the network requests\nyour application is making that aren't usually visible from within the app. Command line\ntools are great for lots of reasons, mainly because junior developers and less tech savvy\npeople on the team will think you are some sort of super hacker wizard if they walk by and see\nyou frantically typing in a terminal window.</p>\n<p>But it's not alwasy obvious how to get your terminal to send network traffic to a proxy.</p>\n<p>These days I use <a href=\"https://www.getpostman.com/\">Postman</a> as my API test tool of choice. It's\na solid tool for testing and includes a commmand line runner (Newman). When using the GUI,\nit's really easy to see the requests and responses. When running Newman from the command line, not\nso much.</p>\n<p>So how do you configure CLIs to use a local proxy? Turns out you just need to set the <code class=\"language-text\">http_proxy</code>\nenvironment variable. And when you're done you can <code class=\"language-text\">unset</code> it. (Examples below use the default port for <a href=\"https://www.charlesproxy.com/\">Charles Proxy</a>).</p>\n<h3>TL;DR</h3>\n<ul>\n<li><code class=\"language-text\">export http_proxy=http://localhost:8888</code></li>\n<li><code class=\"language-text\">export https_proxy=http://localhost:8888</code></li>\n<li><code class=\"language-text\">unset http_proxy</code></li>\n<li><code class=\"language-text\">unset https_proxy</code></li>\n</ul>","id":"aeabd451-94eb-5b53-aa64-1efcb78efb6a","frontmatter":{"title":"Proxy command line processes","date":"January 20, 2019","tags":["proxy","charlesproxy","postman","newman","cli"]},"fields":{"slug":"/proxy-command-line-processes/"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":3,"skip":3,"numPages":4,"currentPage":2}}